#include "ntokenize/lex.hh"

#define TokenEntry(name) {Token::name, #name}

namespace ntokenize::lex {
  map<Token,string> token_name = {
    TokenEntry(EndMarker),
    TokenEntry(Name),
    TokenEntry(Number),
    TokenEntry(String),
    TokenEntry(NewLine),
    TokenEntry(Indent),
    TokenEntry(Dedent),
    TokenEntry(LPar),
    TokenEntry(Rpar),
    TokenEntry(LSQB),
    TokenEntry(RSQB),
    TokenEntry(Colon),
    TokenEntry(Comma),
    TokenEntry(Semi),
    TokenEntry(Plus),
    TokenEntry(Minus),
    TokenEntry(Star),
    TokenEntry(Slash),
    TokenEntry(VBar),
    TokenEntry(Amper),
    TokenEntry(Less),
    TokenEntry(Greater),
    TokenEntry(Equal),
    TokenEntry(Dot),
    TokenEntry(Percent),
    TokenEntry(LBrace),
    TokenEntry(RBrace),
    TokenEntry(EQEqual),
    TokenEntry(NotEqual),
    TokenEntry(LessEqual),
    TokenEntry(GreaterEqual),
    TokenEntry(Tilde),
    TokenEntry(Circumflex),
    TokenEntry(LShift),
    TokenEntry(RShift),
    TokenEntry(DoubleStar),
    TokenEntry(PlusEqual),
    TokenEntry(MinEqual),
    TokenEntry(StarEqual),
    TokenEntry(SlashEqual),
    TokenEntry(PercentEqual),
    TokenEntry(AmperEqual),
    TokenEntry(VBarEqual),
    TokenEntry(CircumflexEqual),
    TokenEntry(LShiftEqual),
    TokenEntry(RshiftEqual),
    TokenEntry(DoubleStarEqual),
    TokenEntry(DoubleSlash),
    TokenEntry(DoubleSlashEqual),
    TokenEntry(AT),
    TokenEntry(ATEqual),
    TokenEntry(RArrow),
    TokenEntry(Ellipsis),
    TokenEntry(ColonEqual),
    TokenEntry(Operator),
    TokenEntry(Await),
    TokenEntry(Async),
    TokenEntry(Ignore),
    TokenEntry(SoftKeyword),
    TokenEntry(Error),
    TokenEntry(Comment),
    TokenEntry(N_TOKENS),
    TokenEntry(NT_OFFSET),
  };
}
